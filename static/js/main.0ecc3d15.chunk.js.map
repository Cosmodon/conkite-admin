{"version":3,"sources":["libs/common.ts","Views/NotesList.tsx","Views/PaymentsList.tsx","Views/MessageForCorrlinks.tsx","Views/MessageForSociety.tsx","Views/PaymentOrNotesTabs.tsx","Views/CorrlinksUsers.tsx","Views/PaymentForm.tsx","Store/hooks.ts","Store/PhonebookEntry.ts","Views/Phonebook.tsx","libs/api.ts","Views/PhonebookTest.tsx","Views/SendMessageToCorrlinks.tsx","Views/MenuTabs.tsx","App.tsx","serviceWorker.ts","libs/theme.ts","Views/MessageSnackbar.tsx","Store/AppStore.ts","Store/LocationStore.ts","Store/NotificationStore.ts","Store/User.ts","Store/UserStore.ts","Store/PhonebookStore.ts","index.tsx"],"names":["removeItemsByFieldValue","array","field","id","filter","a","toYYYYMMDD","date","toJSON","substr","formatDate","value","dateFormat","e","formatDateMMDDYYYYfromYYYYMMDD","split","y","join","correctTimezone","tzOffset","Date","getTimezoneOffset","propDate","setHours","getHours","saveChangeDateCurry","props","onChange","toISOString","NotesList","inject","observer","this","store","app","fetchUserNotes","corrlinks_id","user","notes","onRowAddHandler","newData","addUserNote","note","onRowDeleteHandler","data","deleteUserNote","note_id","Fragment","style","width","margin","options","search","showTitle","columnsButton","isLoading","title","columns","defaultSort","editable","onRowAdd","onRowDelete","React","Component","PaymentsList","fetchUserPayments","payments","deletePayment","payment_id","pageSize","isPaymentsLoading","initialEditValue","editComponent","DatePicker","render","date_created","fetchMessagesForCorrlinks","messages","messagesForCorrlinks","filtering","fetchMessagesForSociety","messagesForSociety","PaymentsNotesTabs","useState","showTab","showTabSet","Tabs","Tab","onClick","label","MessageForCorrlinks","MessageForSociety","toInt","parseInt","extractDatePart","subscribed","subdate","validate","length","Error","name","lengt","date_subscription_ends","valueOf","App","fetchUsers","isLoadingUsers","users","exportButton","sorting","cellStyle","type","color","Typography","date_release","adhoc_phonebook_edit_window_date_start","adhoc_phonebook_edit_window_date_end","date_horoscope_subscription_ends","date_news_subscription_ends","date_sports_subscription_ends","date_investments_subscription_ends","isEditable","rowData","isDeletable","onRowUpdate","oldData","Promise","resolve","reject","updateUser","deleteUser","console","log","alert","addUser","detailPanel","toJS","PaymentForm","state","busy","initialValues","getInitialValues","usersIdx","products","productsIdx","values","errors","isNaN","amount","toString","hasChanges","formikProps","JSON","stringify","onSubmit","setState","Object","assign","product_type","product_instance_id","instances","product_instances_id","submitPayment","result","submitPurchase","message","notifications","addToMessageQueue","sort","b","reduce","c","fetchProducts","forEach","product","product_id","setMonth","getMonth","comment","toLocaleDateString","date_phonebook_subscription_ends","textAlign","variant","enableReinitialize","Table","TableBody","TableRow","TableCell","required","fullWidth","setFieldValue","touched","CircularProgress","Autocomplete","persist","target","getOptionLabel","o","renderInput","params","TextField","renderOption","data-value","Select","textTransform","handleChange","map","MenuItem","key","product_name","selected","cost","i","product_instance","months","multiline","rows","isValid","colSpan","Grid","container","direction","justify","alignItems","Button","window","location","reload","disabled","handleSubmit","useUserStore","useContext","MobXProviderContext","usePhonebookStore","phonebook","PhonebookEntry","line_id","mobile","push","entries","entry","PhonebookUI","selectedUser","setUser","debounce","setDebounce","userStore","phonebookStore","useEffect","fetchPhonebookEntries","useObserver","slice","updatePhonebookEntry","Auth","msg","endpoints","auth","api","create","baseURL","headers","Accept","corrlinksId","get","response","put","ok","originalError","post","newUser","delete","addUserPayment","payment","sendMessageToUser","subject","body","deleteUserPayment","postPurchase","pd","getPhonebookEmail","updatePhonebookEntries","sendTextPhonebook","text","account","responseRequired","sendToMessageFromCorrlinks","to","from","newNote","addMonitor","status","logout","href","includes","setEndpoint","endpoint","getBaseURL","setValue","setFn","event","PhonebookTest","setText","setSubject","setAccount","setCorrlinks_id","setResponse","sendText","clearResponse","addTemplateText","TEMPLATE","copyResponse","getPhonebook","Input","border","placeholder","whiteSpace","SendMessageToCorrlinks","bodySet","subjectSet","accountSet","corrlinksIdSet","corrlinks_account","clear","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","SimpleTabs","hash","AppBar","position","aria-label","host","API","getEndpoint","v","getEndpoints","CorrlinksUsers","Phonebook","MenuTabs","Boolean","hostname","match","theme","createMuiTheme","typography","fontFamily","subtitle1","subtitle2","h1","fontSize","h2","h3","h4","h5","h6","fontWeight","letterSpacing","palette","primary","light","main","contrastText","secondary","dark","overrides","MuiTableCell","root","padding","spacing","paddingLeft","TransitionUp","Slide","styles","success","backgroundColor","info","warning","error","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","MessageSnackbar","handleClick","popFromMessageQueue","handleClose","queueItem","getFromMessageQueue","Icon","typeText","charAt","toUpperCase","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","TransitionComponent","ContentProps","SnackbarContent","display","opacity","marginRight","action","IconButton","AppStore","bound","observable","fn","catch","setLoading","paymentDetails","paymentNotification","purchaseDetails","stateVariable","LocationStore","addEventListener","locationHashChanged","newURL","q","NotificationStore","messageQueue","pop","User","phonebook_entries_allowed","date_released","credits","UserStore","createFromArray","stripTableData","tableData","fields","PhonebookStore","errorMsg","line","ReactDOM","ThemeProvider","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ecc3d15.chunk.js","sourcesContent":["import dateFormat from \"dateformat\";\n\nexport function sendNotification(message, type = \"success\") {\n\twindow.dispatchEvent(\n\t\tnew CustomEvent(\"nbmessage\", { detail: { message, type } })\n\t);\n}\n\nexport function toCamelCase(value) {\n\treturn value.replace(/-([a-z])/g, function(g) {\n\t\treturn g[1].toUpperCase();\n\t});\n}\n\nexport function toKebabCase(string) {\n\treturn string.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nexport function urlToHashParams(hash) {\n\tlet hashObject = {};\n\tif (hash.indexOf(\"=\") > 0) {\n\t\thash\n\t\t\t.split(\"?\")[1]\n\t\t\t.split(\"&\")\n\t\t\t.forEach(param => {\n\t\t\t\tlet split = param.split(\"=\");\n\t\t\t\thashObject[toCamelCase(split[0])] = split[1];\n\t\t\t});\n\t}\n\treturn hashObject;\n}\n\nexport function hashParamsToURL(baseURL, values) {\n\tconst params = [];\n\tObject.keys(values).forEach(key =>\n\t\tparams.push(`${toKebabCase(key)}=${values[key]}`)\n\t);\n\tconst hashParams = \"#?\" + params.join(\"&\");\n\treturn baseURL.split(\"#\")[0] + hashParams;\n}\n\nexport function numberWithCommas(x) {\n\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function timestamp() {\n\tlet d = new Date();\n\td.setMinutes(d.getMinutes() + -d.getTimezoneOffset());\n\treturn d\n\t\t.toISOString()\n\t\t.replace(\"T\", \" \")\n\t\t.split(\".\")[0];\n}\n\nexport function arrayToMap(array, key) {\n\tlet a = {};\n\tarray.forEach(b => (a[b.id] = b));\n\treturn a;\n}\n\nexport function arrayToIdx(array, idxField, valueField) {\n\tif (!array) return {};\n\treturn array.reduce(\n\t\t(a, c) => Object.assign(a, { [c[idxField]]: c[valueField] }),\n\t\t{}\n\t);\n}\n\nexport function applyAdjustmentOnMutation({ newCSS, elementId, timeoutValue }) {\n\tlet wixdone = false;\n\tfunction subscriber(mutations) {\n\t\tif (wixdone) {\n\t\t\tobserver.disconnect();\n\t\t\treturn;\n\t\t}\n\t\tlet found;\n\t\tmutations.some(a =>\n\t\t\ta.target.id === elementId ? (found = a.target) : false\n\t\t);\n\t\tif (!found) return;\n\t\twixdone = true;\n\t\tfound.parentNode.style = newCSS;\n\t}\n\tconst observer = new MutationObserver(subscriber);\n\tconst config = { attributes: true, subtree: true };\n\tobserver.observe(document.body, config);\n\twindow.setTimeout(() => {\n\t\tobserver.disconnect();\n\t}, timeoutValue);\n}\n\nexport function calculateEarnings(amount, product) {\n\tconst yearlyEarnings =\n\t\t(parseInt(amount) / 100) * parseFloat(product.interest_rate);\n\tconst yourEarnings = (yearlyEarnings / 365) * product.tenor;\n\treturn parseInt(\"\" + yourEarnings);\n}\n\nexport function calculatePortfolioTotals(portfolioItems) {\n\tlet returnsEarned = 0;\n\tlet returnsDue = 0;\n\tlet returnsTotal = 0;\n\tlet currency = \"₦\";\n\n\tportfolioItems.forEach(a => {\n\t\tconst calculatedEarnings = calculateEarnings(a.amount, a.productJSON);\n\n\t\t// returnsEarned\n\t\tif ([\"LIQUIDATED\", \"MATURED\"].indexOf(a.status) >= 0) {\n\t\t\treturnsEarned += calculatedEarnings;\n\t\t}\n\n\t\t// returnsDue\n\t\tif ([\"BOOKED\", \"PROCESSING\", \"SUBMITTED\"].indexOf(a.status) >= 0) {\n\t\t\treturnsDue += calculatedEarnings;\n\t\t}\n\n\t\t// portfolio balance\n\t\tif (\n\t\t\t[\"SUBMITTED\", \"BOOKED\", \"PROCESSING\", \"MATURED\"].indexOf(a.status) >= 0\n\t\t) {\n\t\t\treturnsTotal += calculatedEarnings + parseInt(a.amount);\n\t\t}\n\t});\n\treturn { returnsEarned, returnsDue, returnsTotal, currency };\n}\n\nlet id = 0;\nexport function nextId() {\n\treturn ++id;\n}\n\nexport function removeItemsByFieldValue(\n\tarray: any[],\n\tfield: string,\n\tid: string | number\n): any[] {\n\treturn array.filter(a => a[field] !== id);\n}\n\nexport function toYYYYMMDD(date) {\n\tif (!date) return null;\n\treturn date.toJSON().substr(0, 10);\n}\n\nexport function formatDate(value) {\n\ttry {\n\t\tconst date = dateFormat(value + \"\", \"mm/dd/yyyy\");\n\t\treturn date;\n\t} catch (e) {\n\t\treturn \"-\";\n\t}\n}\n\nexport function formatDateMMDDYYYYfromYYYYMMDD(value) {\n\tif (!value) return '-';\n\tvalue = value.substr(0,10);\n\tconst [y, m, d] = value.split(\"-\");\n\treturn [m, d, y].join(\"/\");\n}\n\nexport function correctTimezone(value) {\n\tconst currentDate = new Date();\n\tconst tzOffset = currentDate.getTimezoneOffset();\n\tconst propDate = new Date(value);\n\tpropDate.setHours(propDate.getHours() + tzOffset / 60);\n\treturn propDate;\n}\n\nexport function saveChangeDateCurry(props) {\n\treturn value => props.onChange(value.toISOString().substr(0, 10));\n}\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport MaterialTable from \"material-table\";\n\n@inject(\"store\")\n@observer\nclass NotesList extends React.Component<{\n\tstore?;\n\tprops?;\n\tuser?;\n}> {\n\tasync componentDidMount() {\n\t\tawait this.props.store.app.fetchUserNotes({ corrlinks_id: this.props.user.corrlinks_id });\n\t}\n\n\trender() {\n\t\tconst notes = this.props.store.app.notes.filter(a => a.corrlinks_id === this.props.user.corrlinks_id);\n\t\tconst onRowAddHandler = async newData => {\n\t\t\tawait this.props.store.app.addUserNote({ corrlinks_id: this.props.user.corrlinks_id, note: newData.note });\n\t\t};\n\t\tconst onRowDeleteHandler = async data => {\n\t\t\tawait this.props.store.app.deleteUserNote({ corrlinks_id: this.props.user.corrlinks_id, note_id: data.id });\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<MaterialTable\n\t\t\t\t\tstyle={{ width: \"75%\", margin: \"0 auto\" }}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\t// \tpageSize: 5,\n\t\t\t\t\t\tsearch: false,\n\t\t\t\t\t\tshowTitle: false,\n\t\t\t\t\t\t// \ttoolbar: false,\n\t\t\t\t\t\tcolumnsButton: true\n\t\t\t\t\t}}\n\t\t\t\t\tisLoading={this.props.store.app.isLoading.notes}\n\t\t\t\t\ttitle={`Notes`}\n\t\t\t\t\tdata={notes}\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"id\",\n\t\t\t\t\t\t\tfield: \"id\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t\teditable: \"never\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Note\",\n\t\t\t\t\t\t\tfield: \"note\",\n\t\t\t\t\t\t\teditable: \"onAdd\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Date Created\",\n\t\t\t\t\t\t\tfield: \"date_created\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\teditable={{\n\t\t\t\t\t\tonRowAdd: onRowAddHandler,\n\t\t\t\t\t\tonRowDelete: onRowDeleteHandler\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default NotesList;\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport MaterialTable from \"material-table\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { formatDateMMDDYYYYfromYYYYMMDD } from \"../libs/common\";\n\n@inject(\"store\")\n@observer\nclass PaymentsList extends React.Component<{\n\tstore?;\n\tprops?;\n\tuser?;\n}> {\n\tasync componentDidMount() {\n\t\tawait this.props.store.app.fetchUserPayments(this.props.user.corrlinks_id);\n\t}\n\n\trender() {\n\t\tconst payments = this.props.store.app.payments.filter(\n\t\t\ta => a.corrlinks_id === this.props.user.corrlinks_id\n\t\t);\n\t\tconst onRowDeleteHandler = async data => {\n\t\t\tawait this.props.store.app.deletePayment({ corrlinks_id: this.props.user.corrlinks_id, payment_id: data.id });\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<MaterialTable\n\t\t\t\t\tstyle={{ width: \"75%\", margin: \"0 auto\" }}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tpageSize: 5,\n\t\t\t\t\t\tsearch: false,\n\t\t\t\t\t\tshowTitle: false,\n\t\t\t\t\t\t// toolbar: false,\n\t\t\t\t\t}}\n\t\t\t\t\tisLoading={this.props.store.app.isPaymentsLoading}\n\t\t\t\t\ttitle={`Payments`}\n\t\t\t\t\tdata={payments}\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"id\",\n\t\t\t\t\t\t\tfield: \"id\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t\teditable: \"never\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Date Payment Made\",\n\t\t\t\t\t\t\tfield: \"date_created\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\t\tinitialEditValue: () => new Date(),\n\t\t\t\t\t\t\teditComponent: props => (\n\t\t\t\t\t\t\t\t<DatePicker value={props.value} onChange={props.onChange} />\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trender: props => formatDateMMDDYYYYfromYYYYMMDD(props.date_created)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Amount\",\n\t\t\t\t\t\t\tfield: \"amount\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\t\tinitialEditValue: () => 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Comment\",\n\t\t\t\t\t\t\tfield: \"comment\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\teditable={{\n\t\t\t\t\t\tonRowDelete: onRowDeleteHandler\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PaymentsList;\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport MaterialTable from \"material-table\";\n\n@inject(\"store\")\n@observer\nclass NotesList extends React.Component<{\n\tstore?;\n\tprops?;\n\tuser?;\n}> {\n\tasync componentDidMount() {\n\t\tawait this?.props?.store?.app?.fetchMessagesForCorrlinks?.({ corrlinks_id: this.props.user.corrlinks_id });\n\t}\n\n\trender() {\n\t\tconst messages = this?.props?.store?.app?.messagesForCorrlinks?.filter?.(a => a.corrlinks_id === this.props.user.corrlinks_id);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<MaterialTable\n\t\t\t\t\tstyle={{ width: \"75%\", margin: \"0 auto\" }}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tsearch: true,\n            filtering: true,\n\t\t\t\t\t\tshowTitle: false,\n\t\t\t\t\t\tcolumnsButton: true\n\t\t\t\t\t}}\n\t\t\t\t\tisLoading={this.props.store.app.isLoading.messagesForCorrlinks}\n\t\t\t\t\ttitle={`Messages For Corrlinks`}\n\t\t\t\t\tdata={messages}\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"id\",\n\t\t\t\t\t\t\tfield: \"id\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Mobile Number\",\n\t\t\t\t\t\t\tfield: \"mobile_number\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Subject\",\n\t\t\t\t\t\t\tfield: \"subject\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Body\",\n\t\t\t\t\t\t\tfield: \"body\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Status\",\n\t\t\t\t\t\t\tfield: \"status\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Date Created\",\n\t\t\t\t\t\t\tfield: \"date_created\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Corrlinks Account\",\n\t\t\t\t\t\t\tfield: \"corrlinks_account\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default NotesList;\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport MaterialTable from \"material-table\";\n\n@inject(\"store\")\n@observer\nclass NotesList extends React.Component<{\n\tstore?;\n\tprops?;\n\tuser?;\n}> {\n\tasync componentDidMount() {\n\t\tawait this?.props?.store?.app?.fetchMessagesForSociety?.({ corrlinks_id: this.props.user.corrlinks_id });\n\t}\n\n\trender() {\n\t\tconst messages = this?.props?.store?.app?.messagesForSociety?.filter?.(a => a.corrlinks_id === this.props.user.corrlinks_id);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<MaterialTable\n\t\t\t\t\tstyle={{ width: \"75%\", margin: \"0 auto\" }}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tsearch: true,\n            filtering: true,\n\t\t\t\t\t\tshowTitle: false,\n\t\t\t\t\t\tcolumnsButton: true\n\t\t\t\t\t}}\n\t\t\t\t\tisLoading={this.props.store.app.isLoading.messagesForSociety}\n\t\t\t\t\ttitle={`Messages For Society`}\n\t\t\t\t\tdata={messages}\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"id\",\n\t\t\t\t\t\t\tfield: \"id\",\n\t\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Mobile Number\",\n\t\t\t\t\t\t\tfield: \"mobile_number\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Subject\",\n\t\t\t\t\t\t\tfield: \"subject\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Body\",\n\t\t\t\t\t\t\tfield: \"body\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Status\",\n\t\t\t\t\t\t\tfield: \"status\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Date Created\",\n\t\t\t\t\t\t\tfield: \"date_created\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Corrlinks Account\",\n\t\t\t\t\t\t\tfield: \"corrlinks_account\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default NotesList;\n","import { Tab, Tabs } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport NotesList from \"./NotesList\";\nimport PaymentsList from \"./PaymentsList\";\nimport MessageForCorrlinks from \"./MessageForCorrlinks\";\nimport MessageForSociety from \"./MessageForSociety\";\n\nexport default function PaymentsNotesTabs(props) {\n\tconst [showTab, showTabSet] = useState(1);\n\treturn (\n\t\t<>\n\t\t\t<Tabs value={showTab} style={{ width: \"75%\", margin: \"0 auto\" }}>\n\t\t\t\t<Tab value={1} onClick={() => showTabSet(1)} label=\"Payments\"  />\n\t\t\t\t<Tab value={2} onClick={() => showTabSet(2)} label=\"Notes\" />\n\t\t\t\t<Tab value={3} onClick={() => showTabSet(3)} label=\"Messages For Corrlinks\" />\n\t\t\t\t<Tab value={4} onClick={() => showTabSet(4)} label=\"Messages For Society\" />\n\t\t\t</Tabs>\n\t\t\t{showTab === 1 && <PaymentsList user={props.user} />}\n\t\t\t{showTab === 2 && <NotesList user={props.user} />}\n\t\t\t{showTab === 3 && <MessageForCorrlinks user={props.user} />}\n\t\t\t{showTab === 4 && <MessageForSociety user={props.user} />}\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport MaterialTable from \"material-table\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Typography } from \"@material-ui/core\";\nimport { toJS } from \"mobx\";\nimport { formatDate, formatDateMMDDYYYYfromYYYYMMDD, correctTimezone, saveChangeDateCurry } from \"../libs/common\";\nimport PaymentsNotesTabs from \"./PaymentOrNotesTabs\";\n\n\nconst extractDatePart = value => {\n\treturn (new Date(value).toJSON() || \"\").substr(0, 10);\n};\nconst toInt = value =>\n\tparseInt(\n\t\textractDatePart(value)\n\t\t\t.split(\"-\")\n\t\t\t.join(\"\")\n\t);\nconst subscribed = value => {\n\tlet subdate = toInt(value);\n\tlet todaydate = toInt(new Date());\n\treturn todaydate > subdate;\n};\n\n@inject(\"store\")\n@observer\nclass App extends React.Component<{\n\tstore?;\n\tprops?;\n}> {\n\tasync componentDidMount() {\n\t\tawait this.props.store.app.fetchUsers();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<MaterialTable\n\t\t\t\tisLoading={this.props.store.app.isLoadingUsers}\n\t\t\t\ttitle={`Corrlink Users`}\n\t\t\t\tdata={this.props.store.app.users}\n\t\t\t\toptions={{\n\t\t\t\t\tpageSize: 10,\n\t\t\t\t\tsearch: true,\n\t\t\t\t\texportButton: true,\n\t\t\t\t\tfiltering: true,\n\t\t\t\t\tsorting: true,\n\t\t\t\t\tcolumnsButton: true\n\t\t\t\t}}\n\t\t\t\tcolumns={[\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle: { width: \"10%\" },\n\t\t\t\t\t\ttitle: \"ID\",\n\t\t\t\t\t\tfield: \"corrlinks_id\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"onAdd\",\n\t\t\t\t\t\ttype: \"numeric\" // string with only 0-9, leading 0 allowed\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"NAME\",\n\t\t\t\t\t\tfield: \"name\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"MESSAGING SUBSCRIPTION\",\n\t\t\t\t\t\tfield: \"date_subscription_ends\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\tinitialEditValue: () => {\n\t\t\t\t\t\t\treturn new Date();\n\t\t\t\t\t\t},\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\tconst color = subscribed(props.date_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t\t\treturn <Typography style={{ color }}>{formatDateMMDDYYYYfromYYYYMMDD(props.date_subscription_ends)}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"STATUS\",\n\t\t\t\t\t\tfield: \"date_subscription_ends\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"never\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\tconst color = subscribed(props.date_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t\t\treturn <Typography style={{ color }}>{color === \"red\" ? \"UNPAID\" : \"PAID\"}</Typography>;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\ttitle: \"DATE CREATED\",\n\t\t\t\t\t\tfield: \"date_created\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"never\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"EMAIL\",\n\t\t\t\t\t\tfield: \"corrlinks_account\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"PRISON\",\n\t\t\t\t\t\tfield: \"location\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"RELEASE DATE\",\n\t\t\t\t\t\tfield: \"date_release\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"onUpdate\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\treturn <Typography>{formatDate(props ? formatDateMMDDYYYYfromYYYYMMDD(props.date_release) : \"-\")}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"PHONEBOOK UPDATE START DATE\",\n\t\t\t\t\t\tfield: \"adhoc_phonebook_edit_window_date_start\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"onUpdate\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\treturn <Typography>{formatDate(props ? formatDateMMDDYYYYfromYYYYMMDD(props.adhoc_phonebook_edit_window_date_start) : \"-\")}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"PHONEBOOK UPDATE END DATE\",\n\t\t\t\t\t\tfield: \"adhoc_phonebook_edit_window_date_end\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"onUpdate\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\treturn <Typography>{formatDate(props ? formatDateMMDDYYYYfromYYYYMMDD(props.adhoc_phonebook_edit_window_date_end) : \"-\")}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t//{\n\t\t\t\t\t//\ttitle: \"phonebook expiration date\",\n\t\t\t\t\t//\tfield: \"date_phonebook_subscription_ends\",\n\t\t\t\t\t//\tdefaultSort: \"desc\",\n\t\t\t\t\t//\teditable: \"always\",\n\t\t\t\t\t//\trender: props => {\n\t\t\t\t\t//\t\tif (!props) return null;\n\t\t\t\t\t//\t\tconst color = subscribed(props.date_phonebook_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t//\t\treturn <Typography style={{ color }}>{formatDateMMDDYYYYfromYYYYMMDD(props.date_phonebook_subscription_ends)}</Typography>;\n\t\t\t\t\t//\t},\n\t\t\t\t\t//\teditComponent: props => {\n\t\t\t\t\t//\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t//\t}\n\t\t\t\t\t//},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"HOROSCOPE SUBSCRIPTION\",\n\t\t\t\t\t\tfield: \"date_horoscope_subscription_ends\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\tif (!props) return null;\n\t\t\t\t\t\t\tconst color = subscribed(props.date_horoscope_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t\t\treturn <Typography style={{ color }}>{formatDateMMDDYYYYfromYYYYMMDD(props.date_horoscope_subscription_ends)}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"NEWS SUBSCRIPTION\",\n\t\t\t\t\t\tfield: \"date_news_subscription_ends\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\tif (!props) return null;\n\t\t\t\t\t\t\tconst color = subscribed(props.date_news_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t\t\treturn <Typography style={{ color }}>{formatDateMMDDYYYYfromYYYYMMDD(props.date_news_subscription_ends)}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"SPORTS SUBSCRIPTION\",\n\t\t\t\t\t\tfield: \"date_sports_subscription_ends\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\tif (!props) return null;\n\t\t\t\t\t\t\tconst color = subscribed(props.date_sports_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t\t\treturn <Typography style={{ color }}>{formatDateMMDDYYYYfromYYYYMMDD(props.date_sports_subscription_ends)}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"INVESTMENT SUBSCRIPTION\",\n\t\t\t\t\t\tfield: \"date_investments_subscription_ends\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\trender: props => {\n\t\t\t\t\t\t\tif (!props) return null;\n\t\t\t\t\t\t\tconst color = subscribed(props.date_investments_subscription_ends) ? \"red\" : \"green\";\n\t\t\t\t\t\t\treturn <Typography style={{ color }}>{formatDateMMDDYYYYfromYYYYMMDD(props.date_investments_subscription_ends)}</Typography>;\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditComponent: props => {\n\t\t\t\t\t\t\treturn <DatePicker value={correctTimezone(props.value)} onChange={saveChangeDateCurry(props)} />;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"ESCROW\",\n\t\t\t\t\t\tfield: \"credits\",\n\t\t\t\t\t\tdefaultSort: \"desc\",\n\t\t\t\t\t\teditable: \"always\",\n\t\t\t\t\t\ttype: \"numeric\",\n\t\t\t\t\t},\n\t\t\t\t\t//{\n\t\t\t\t\t//\ttitle: \"Phonebook Entries\",\n\t\t\t\t\t//\tfield: \"phonebook_entries_allowed\",\n\t\t\t\t\t//\tdefaultSort: \"desc\",\n\t\t\t\t\t//\teditable: \"always\",\n\t\t\t\t\t//\tinitialEditValue: 15,\n\t\t\t\t\t//},\n\t\t\t\t\t//{\n\t\t\t\t\t//\ttitle: \"Notes\",\n\t\t\t\t\t//\tfield: \"notes\",\n\t\t\t\t\t//\tdefaultSort: \"desc\",\n\t\t\t\t\t//\teditable: \"always\"\n\t\t\t\t\t//},\n\t\t\t\t\t// {\n\t\t\t\t\t//\ttitle: \"Uses Phonebook?\",\n\t\t\t\t\t//\tfield: \"use_phonebook\",\n\t\t\t\t\t//\tdefaultSort: \"desc\",\n\t\t\t\t\t//\teditable: \"always\",\n\t\t\t\t\t//\trender: props => <Typography>{props.use_phonebook === 0 ? \"No\" : \"Yes\"}</Typography>,\n\t\t\t\t\t//\teditComponent: props => (\n\t\t\t\t\t//\t\t<Select value={props.value} onChange={event => props.onChange(event.target.value)}>\n\t\t\t\t\t//\t\t\t<MenuItem key={0} value={0}>\n\t\t\t\t\t//\t\t\t\tNo\n\t\t\t\t\t//\t\t\t</MenuItem>\n\t\t\t\t\t//\t\t\t<MenuItem key={1} value={1}>\n\t\t\t\t\t//\t\t\t\tYes\n\t\t\t\t\t//\t\t\t</MenuItem>\n\t\t\t\t\t//\t\t</Select>\n\t\t\t\t\t//\t)\n\t\t\t\t\t//},\n\t\t\t\t\t// {\n\t\t\t\t\t//\ttitle: \"Email\",\n\t\t\t\t\t//\tfield: \"corrlinks_account\",\n\t\t\t\t\t//\tdefaultSort: \"desc\",\n\t\t\t\t\t//\teditable: \"always\"\n\t\t\t\t\t// },\n\t\t\t\t\t// {\n\t\t\t\t\t// \ttitle: \"Server Status\",\n\t\t\t\t\t// \tfield: \"status\",\n\t\t\t\t\t// \tdefaultSort: \"desc\",\n\t\t\t\t\t// \teditable: \"always\",\n\t\t\t\t\t// \teditComponent: props => (\n\t\t\t\t\t// \t\t<Select\n\t\t\t\t\t// \t\t\tvalue={props.value}\n\t\t\t\t\t// \t\t\tonChange={event => {\n\t\t\t\t\t// \t\t\t\tconsole.log(event);\n\t\t\t\t\t// \t\t\t\treturn props.onChange(event.target.value);\n\t\t\t\t\t// \t\t\t}}>\n\t\t\t\t\t// \t\t\t{statuses.map((a, i) => <MenuItem key={i} value={a.value}>{a.text}</MenuItem>)}\n\t\t\t\t\t// \t\t</Select>\n\t\t\t\t\t// \t)\n\t\t\t\t\t// },\n\t\t\t\t]}\n\t\t\t\teditable={{\n\t\t\t\t\tisEditable: (rowData: any) => true,\n\t\t\t\t\tisDeletable: (rowData: any) => false,\n\t\t\t\t\tonRowUpdate: (newData, oldData) =>\n\t\t\t\t\t\tnew Promise(async (resolve, reject) => {\n\t\t\t\t\t\t\tconst corrlinks_id = oldData.corrlinks_id;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tvalidate(newData);\n\t\t\t\t\t\t\t\tawait this.props.store.app.updateUser({\n\t\t\t\t\t\t\t\t\tcorrlinks_id,\n\t\t\t\t\t\t\t\t\tuser: newData\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\tonRowDelete: oldData =>\n\t\t\t\t\t\tnew Promise(async (resolve, reject) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.props.store.app.deleteUser({\n\t\t\t\t\t\t\t\t\tcorrlinks_id: oldData.corrlinks_id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t\t\talert(e);\n\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\tonRowAdd: newData =>\n\t\t\t\t\t\tnew Promise(async (resolve, reject) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tvalidate(newData);\n\t\t\t\t\t\t\t\tawait this.props.store.app.addUser({ user: newData });\n\t\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t\t\talert(e);\n\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t\tdetailPanel={props => <PaymentsNotesTabs user={toJS(props)} />}\n\t\t\t/>\n\t\t);\n\t}\n}\nfunction validate(a) {\n\tif (!a.corrlinks_id || (\"\" + a.corrlinks_id).length < 8) throw new Error(\"corrlinks_id must be 8 digits long\");\n\tif (!a.name || a.name.lengt < 1) throw new Error(\"name required\");\n\tif (!a.date_subscription_ends || !new Date(a.date_subscription_ends).valueOf()) throw new Error(\"date_subscription_ends must be a valid date\");\n\treturn true;\n}\n\nexport default App;\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Typography, Table, TableRow, TableCell, TextField, Button, Grid, TableBody, CircularProgress, Select, MenuItem } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Formik, FormikProps } from \"formik\";\nimport { toJS } from \"mobx\";\n\nconst MESSAGING = 2;\nconst ESCROW = 3;\nconst ADHOC = 4;\nconst HOROSCOPE = 5;\nconst NEWS = 6;\nconst SPORTS = 7;\n\n@inject(\"store\")\n@observer\nclass PaymentForm extends React.Component<{\n\tstore?;\n\tprops?;\n}> {\n\tstate = {\n\t\tbusy: false,\n\t\tinitialValues: this.getInitialValues(),\n\t\tusers: [],\n\t\tusersIdx: {},\n\t\tproducts: [],\n\t\tproductsIdx: {}\n\t};\n\n\tasync componentDidMount() {\n\t\t// load users\n\t\tawait this.props.store.app.fetchUsers();\n\t\tconst users = toJS(this.props.store.app.users).sort((a, b) => (a[\"corrlinks_id\"] > b[\"corrlinks_id\"] ? 1 : -1));\n\t\tconst usersIdx = users.reduce((a, c) => Object.assign(a, { [c.corrlinks_id]: c }), {});\n\t\tthis.setState({ users, usersIdx });\n\n\t\t// load products\n\t\tawait this.props.store.app.fetchProducts();\n\t\tconst productsIdx = {};\n\t\ttoJS(this.props.store.app.products).forEach(product => (productsIdx[product.product_id] = product));\n\t\tthis.setState({ products: this.props.store.app.products, productsIdx });\n\t}\n\n\tvalidate = values => {\n\t\tconst errors: any = {};\n\t\tif (isNaN(parseInt(values.amount, 10)) || values.amount < 0) errors.amount = \"amount must be >= 0\";\n\t\tif (!(values.date_created instanceof Date) || values.date_created.toString() === \"Invalid Date\") errors.date_created = \"invalid date\";\n\t\t// if (\n\t\t// \t!(values.date_subscription_ends instanceof Date) ||\n\t\t// \tvalues.date_subscription_ends.toString() === \"Invalid Date\"\n\t\t// )\n\t\t// \terrors.date_subscription_ends = \"invalid date\";\n\t\tif (!values.corrlinks_id) errors.corrlinks_id = \"Invalid id\";\n\t\t// if (\n\t\t// \tvalues.date_created instanceof Date &&\n\t\t// \tvalues.date_subscription_ends instanceof Date &&\n\t\t// \tvalues.date_subscription_ends.valueOf() <= values.date_created.valueOf()\n\t\t// ) {\n\t\t// \terrors.date_created = \"Subscription End Darte must be after payment date\";\n\t\t// }\n\t\treturn errors;\n\t};\n\n\thasChanges = formikProps => {\n\t\treturn JSON.stringify(formikProps.values) !== JSON.stringify(formikProps.initialValues);\n\t};\n\n\tonSubmit = async (values, props) => {\n\t\tthis.setState(Object.assign({}, this.state, { busy: true }));\n\t\tlet result;\n\n\t\tswitch (values.product_type) {\n\t\t\tcase ADHOC:\n\t\t\t\tvalues.product_instance_id = this.state.productsIdx[values.product_type].instances[0].product_instances_id;\n\t\t\t\tresult = await this.props.store.app.submitPayment(values);\n\t\t\t\tbreak;\n\t\t\tcase MESSAGING:\n\t\t\t\tresult = await this.props.store.app.submitPurchase(values);\n\t\t\t\tbreak;\n\t\t\tcase ESCROW:\n\t\t\t\tresult = await this.props.store.app.submitPurchase(values);\n\t\t\t\tbreak;\n\t\t\tcase HOROSCOPE:\n\t\t\t\tresult = await this.props.store.app.submitPurchase(values);\n\t\t\t\tbreak;\n\t\t\tcase NEWS:\n\t\t\t\tresult = await this.props.store.app.submitPurchase(values);\n\t\t\t\tbreak;\n\t\t\tcase SPORTS:\n\t\t\t\tresult = await this.props.store.app.submitPurchase(values);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.setState(Object.assign({}, this.state, { busy: false }));\n\n\t\tif (result) {\n\t\t\tconst message = {\n\t\t\t\ttype: \"success\",\n\t\t\t\tmessage: \"Saved!\"\n\t\t\t};\n\t\t\tthis.props.store.notifications.addToMessageQueue(message);\n\t\t}\n\n\t\tObject.assign(this.state.initialValues, values);\n\t};\n\tgetInitialValues() {\n\t\tlet date_subscription_ends = new Date();\n\t\tdate_subscription_ends.setMonth(date_subscription_ends.getMonth() + 1);\n\t\treturn {\n\t\t\tdate_created: new Date(),\n\t\t\tamount: 0,\n\t\t\tcomment: \"\",\n\t\t\tcorrlinks_id: \"\",\n\t\t\tdate_subscription_ends: null,\n\t\t\tproduct_type: 4, // adhoc\n\t\t\tproduct_instance_id: null\n\t\t};\n\t}\n\n\tgetCurrentSubEndDate(corrlinks_id) {\n\t\tconst { usersIdx } = this.state;\n\t\tconst user = usersIdx[corrlinks_id];\n\t\tif (!corrlinks_id || !user) {\n\t\t\treturn \"-\";\n\t\t}\n\t\tconst date = new Date(usersIdx[corrlinks_id].date_subscription_ends);\n\t\treturn date.toLocaleDateString(\"en-US\");\n\t}\n\n\tgetCurrentPhonebookSubEndDate(corrlinks_id) {\n\t\tconst { usersIdx } = this.state;\n\t\tconst user = usersIdx[corrlinks_id];\n\t\tif (\n\t\t\t!corrlinks_id ||\n\t\t\t!user ||\n\t\t\t!usersIdx[corrlinks_id].date_phonebook_subscription_ends ||\n\t\t\tusersIdx[corrlinks_id].date_phonebook_subscription_ends === \"null\"\n\t\t) {\n\t\t\treturn \"-\";\n\t\t}\n\t\tconst date = new Date(usersIdx[corrlinks_id].date_phonebook_subscription_ends);\n\t\treturn date.toLocaleDateString(\"en-US\");\n\t}\n\n\tgetCurrentHoroscopeSubEndDate(corrlinks_id) {\n\t\tconst { usersIdx } = this.state;\n\t\tconst user = usersIdx[corrlinks_id];\n\t\tif (\n\t\t\t!corrlinks_id ||\n\t\t\t!user ||\n\t\t\t!usersIdx[corrlinks_id].date_horoscope_subscription_ends ||\n\t\t\tusersIdx[corrlinks_id].date_horoscope_subscription_ends === \"null\"\n\t\t) {\n\t\t\treturn \"-\";\n\t\t}\n\t\tconst date = new Date(usersIdx[corrlinks_id].date_horoscope_subscription_ends);\n\t\treturn date.toLocaleDateString(\"en-US\");\n\t}\n\n\tgetCurrentNewsSubEndDate(corrlinks_id) {\n\t\tconst { usersIdx } = this.state;\n\t\tconst user = usersIdx[corrlinks_id];\n\t\tif (\n\t\t\t!corrlinks_id ||\n\t\t\t!user ||\n\t\t\t!usersIdx[corrlinks_id].date_news_subscription_ends ||\n\t\t\tusersIdx[corrlinks_id].date_news_subscription_ends === \"null\"\n\t\t) {\n\t\t\treturn \"-\";\n\t\t}\n\t\tconst date = new Date(usersIdx[corrlinks_id].date_news_subscription_ends);\n\t\treturn date.toLocaleDateString(\"en-US\");\n\t}\n\n\tgetCurrentSportsSubEndDate(corrlinks_id) {\n\t\tconst { usersIdx } = this.state;\n\t\tconst user = usersIdx[corrlinks_id];\n\t\tif (\n\t\t\t!corrlinks_id ||\n\t\t\t!user ||\n\t\t\t!usersIdx[corrlinks_id].date_sports_subscription_ends ||\n\t\t\tusersIdx[corrlinks_id].date_sports_subscription_ends === \"null\"\n\t\t) {\n\t\t\treturn \"-\";\n\t\t}\n\t\tconst date = new Date(usersIdx[corrlinks_id].date_sports_subscription_ends);\n\t\treturn date.toLocaleDateString(\"en-US\");\n\t}\n\n\trender() {\n\t\tconst { users } = this.state;\n\n\t\treturn (\n\t\t\t<div style={{ width: \"500px\", margin: \"0 auto\", textAlign: \"center\" }}>\n\t\t\t\t<Typography variant=\"h5\">Enter Payments</Typography>\n\t\t\t\t<Formik enableReinitialize initialValues={this.state.initialValues} onSubmit={this.onSubmit} validate={this.validate}>\n\t\t\t\t\t{(props: FormikProps<any>) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Payment Date:</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"date_created\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.date_created}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={value => props.setFieldValue(\"date_created\", value)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{props.errors.date_created && props.touched.date_created && <div>{props.errors.date_created}</div>}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Corrlink User:</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.props.store.app.isLoading.users && <CircularProgress />}\n\t\t\t\t\t\t\t\t\t\t\t\t{!this.props.store.app.isLoading.users && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"corrlinks_id\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.persist();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst value = e.target[\"dataset\"].value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue(\"corrlinks_id\", value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={users}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetOptionLabel={o => `${o.corrlinks_id} ${o.name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderInput={params => <TextField {...params} name=\"corrlinks_id\" variant=\"standard\" fullWidth />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderOption={o => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div data-value={o.corrlinks_id}>{`${o.corrlinks_id} ${o.name}`}</div>;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{props.errors.corrlinks_id && props.touched.corrlinks_id && <div>{props.errors.corrlinks_id}</div>}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t{/* <TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Current Messaging Sub End Date:</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{this.getCurrentSubEndDate(props.values.corrlinks_id)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Current Phonebook Sub End Date:</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{this.getCurrentPhonebookSubEndDate(props.values.corrlinks_id)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow> */}\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Product</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: \"capitalize\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"product_type\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"product_type\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.product_type}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.products.map(product => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={product.product_id} value={product.product_id} style={{ textTransform: \"capitalize\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{product.product_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t\t\t\t\t{props.values.product_type === ADHOC && (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>New Subscription End Date:</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"date_subscription_ends\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.date_subscription_ends}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={value => props.setFieldValue(\"date_subscription_ends\", value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{props.errors.date_subscription_ends && props.touched.date_subscription_ends && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{props.errors.date_subscription_ends}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{(props.values.product_type === MESSAGING || props.values.product_type === ESCROW || props.values.product_type === HOROSCOPE || props.values.product_type === NEWS || props.values.product_type === SPORTS) && (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>Months</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: \"capitalize\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"product_instance_id\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"product_instance_id\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.values.product_instance_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e, selected) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.handleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst cost = this.state.productsIdx[props.values.product_type].instances.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti => i.product_instances_id === selected[\"props\"].value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)[0].cost;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setFieldValue(\"amount\", cost);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.productsIdx[props.values.product_type].instances.map(product_instance => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`product_instance_id-${product_instance.product_instances_id}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={product_instance.product_instances_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textTransform: \"capitalize\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{product_instance.months} {product_instance.months > 1 ? \"months\" : \"month\"} = {product_instance.cost}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Amount</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField required fullWidth name=\"amount\" id=\"amount\" value={props.values.amount} onChange={props.handleChange} />\n\t\t\t\t\t\t\t\t\t\t\t\t{props.errors.amount && props.touched.amount && <div>{props.errors.amount}</div>}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>Comment</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField fullWidth multiline rows=\"3\" name=\"comment\" value={props.values.comment} onChange={props.handleChange}></TextField>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{JSON.stringify(this.hasChanges(props))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{JSON.stringify(props.isValid)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={() => window.location.reload()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.busy ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.hasChanges(props) && !props.isValid}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => props.handleSubmit(e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSave & Next\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PaymentForm;\n","import React from 'react';\nimport { MobXProviderContext } from \"mobx-react\";\n\nexport const useStore = () => React.useContext(MobXProviderContext).store.app;\nexport const useUserStore = () => React.useContext(MobXProviderContext).store.user;\nexport const usePhonebookStore = () => React.useContext(MobXProviderContext).store.phonebook;\n","export interface IPhonebookEntry {\n\tline_id: number;\n\tlabel: string;\n\tmobile: string;\n\tvalidate(): Array<string>;\n}\n\nexport class PhonebookEntry implements IPhonebookEntry {\n\tline_id: number;\n\tlabel: string;\n\tmobile: string;\n\n\tconstructor(user: IPhonebookEntry) {\n\t\tconst { line_id, label, mobile } = user;\n\t\tthis.line_id = line_id;\n\t\tthis.label = label;\n\t\tthis.mobile = mobile;\n\t}\n\n\tvalidate(): Array<string> {\n\t\tconst errors = [];\n\t\tif (this.label.length < 1) errors.push(\"Label must have at least 1 character\");\n\t\tif (this.mobile.length < 10) errors.push(\"Mobile must contain 10 characters\");\n\t\treturn errors;\n\t}\n\n\tstatic createFromArray(entries: Array<IPhonebookEntry>) {\n\t\treturn entries.map(entry => new PhonebookEntry(entry));\n\t}\n}\n","import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { CircularProgress, TextField } from \"@material-ui/core\";\nimport { useUserStore, usePhonebookStore } from \"../Store/hooks\";\nimport UserStore from \"../Store/UserStore\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { PhonebookEntry } from \"../Store/PhonebookEntry\";\nimport PhonebookStore from \"../Store/PhonebookStore\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\ninterface Props {\n\tcorrlinks_id?: string;\n}\n\nconst PhonebookUI: React.FC<Props> = props => {\n\tconst [selectedUser, setUser] = useState<String>(props.corrlinks_id || \"\");\n\tconst [debounce, setDebounce] = useState<String>(\"\");\n\tconst userStore: UserStore = useUserStore();\n\tconst phonebookStore: PhonebookStore = usePhonebookStore();\n\n\t// eslint-disable-next-line\n\tuseEffect(() => {\n\t\tif (selectedUser && selectedUser !== debounce) {\n\t\t\tphonebookStore.fetchPhonebookEntries(selectedUser);\n\t\t\tsetDebounce(selectedUser);\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tuserStore.fetchUsers();\n\t}, [userStore]);\n\n\treturn useObserver(() => {\n\t\tconst users = userStore.users.slice().sort((a, b) => (a.name > b.name ? 1 : -1));\n\t\tconst usersIdx = users.reduce((a, c) => Object.assign(a, { [c.corrlinks_id]: c }), {});\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{userStore.isLoading && <CircularProgress />}\n\t\t\t\t{\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tid=\"corrlinks_id\"\n\t\t\t\t\t\tonChange={(e, user) => setUser(user ? user.corrlinks_id : \"\")}\n\t\t\t\t\t\toptions={users}\n\t\t\t\t\t\tgetOptionLabel={o => `${o.name} ${o.corrlinks_id}`}\n\t\t\t\t\t\tstyle={{ width: 500 }}\n\t\t\t\t\t\trenderInput={params => <TextField {...params} name=\"corrlinks_id\" variant=\"standard\" fullWidth />}\n\t\t\t\t\t\trenderOption={o => <div data-value={o.corrlinks_id}>{`${o.name} ${o.corrlinks_id}`}</div>}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{selectedUser && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\tisLoading={phonebookStore.isLoading}\n\t\t\t\t\t\ttitle={`Phonebook: ${usersIdx[\"\" + selectedUser]?.name || \"UNKNOWN\"}`}\n\t\t\t\t\t\tdata={phonebookStore.entries}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tpageSize: 15,\n\t\t\t\t\t\t\t// exportButton: true,\n\t\t\t\t\t\t\t// filtering: true,\n\t\t\t\t\t\t\tsorting: true\n\t\t\t\t\t\t\t// columnsButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: \"line\",\n\t\t\t\t\t\t\t\tfield: \"line_id\",\n\t\t\t\t\t\t\t\tdefaultSort: \"asc\",\n\t\t\t\t\t\t\t\teditable: \"never\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: \"label\",\n\t\t\t\t\t\t\t\tfield: \"label\",\n\t\t\t\t\t\t\t\tdefaultSort: \"asc\",\n\t\t\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: \"mobile\",\n\t\t\t\t\t\t\t\tfield: \"mobile\",\n\t\t\t\t\t\t\t\teditable: \"always\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\teditable={{\n\t\t\t\t\t\t\tisEditable: (rowData: any) => true,\n\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\n\t\t\t\t\t\t\t\tnew Promise(async (resolve, reject) => {\n\t\t\t\t\t\t\t\t\tconst corrlinks_id = selectedUser;\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tconst entry: PhonebookEntry = new PhonebookEntry(newData);\n\t\t\t\t\t\t\t\t\t\tconst errors: Array<String> = entry.validate();\n\t\t\t\t\t\t\t\t\t\tif (errors.length) {\n\t\t\t\t\t\t\t\t\t\t\talert(errors.join(\"\\n\"));\n\t\t\t\t\t\t\t\t\t\t\treturn reject();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst saved = await phonebookStore.updatePhonebookEntry({ corrlinks_id, entry });\n\t\t\t\t\t\t\t\t\t\tsaved ? resolve(null) : reject();\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tonRowDelete: oldData =>\n\t\t\t\t\t\t\t\tnew Promise(async (resolve, reject) => {\n\t\t\t\t\t\t\t\t\tconst corrlinks_id = selectedUser;\n\t\t\t\t\t\t\t\t\tconst entry: PhonebookEntry = new PhonebookEntry(oldData);\n\t\t\t\t\t\t\t\t\tentry.label = \"\";\n\t\t\t\t\t\t\t\t\tentry.mobile = \"\";\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tconst saved = await phonebookStore.updatePhonebookEntry({ corrlinks_id, entry });\n\t\t\t\t\t\t\t\t\t\tsaved ? resolve(null) : reject();\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t});\n};\n\nexport default PhonebookUI;\n","import { create } from \"apisauce\";\nimport { PurchaseDetails } from \"../Store/InterfacePaymentDetails\";\n\nclass Auth {\n\tlogout(msg) {\n\t\talert(`logout! ${msg}`);\n\t}\n\tlogin() {\n\t\talert(\"login!\");\n\t}\n}\n\nexport const endpoints: Array<string> = [\"https://theeblvd.ngrok.io\", \"http://localhost:3000\", \"http://localhost:4000/dev\", \"http://1858-5-101-143-119.ngrok.io\"];\n\nclass API {\n\tauth = new Auth();\n\tapi = create({\n\t\tbaseURL: endpoints[0],\n\t\theaders: { Accept: \"application/json\" }\n\t});\n\tconstructor() {\n\t\tconst naviMonitor = response => {\n\t\t\tif (response.status === 403 || response.status === 401) {\n\t\t\t\tthis.auth.logout(`due to status code ${response.status}`);\n\t\t\t}\n\t\t};\n\t\tthis.api.addMonitor(naviMonitor);\n\t\tif (window.location.href.includes(\"localhost\")) {\n\t\t\tthis.setEndpoint(endpoints[1]);\n\t\t}\n\t}\n\tsetEndpoint(endpoint: string) {\n\t\tthis.api = create({\n\t\t\tbaseURL: endpoint,\n\t\t\theaders: { Accept: \"application/json\" }\n\t\t});\n\t\tconsole.log(`Endpoint set to ${endpoint}`);\n\t}\n\tget getEndpoint (): string {\n\t\treturn this.api.getBaseURL();\n\t}\n\tgetEndpoints(): Array<string> {\n\t\treturn endpoints;\n\t}\n\n\tfetchUserPayments = async ({ corrlinksId }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(`users/${corrlinksId}/payments`, options);\n\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\tfetchUsers = async (options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(\"users\", options);\n\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\tupdateUser = async ({ corrlinks_id, user }, options?): Promise<boolean> => {\n\t\tconst result = await this.api.put(`/users/${corrlinks_id}`, user, options);\n\t\tif (!result.ok){\n\t\t\tconsole.log({result});\n\t\t\tthrow new Error(result.originalError.message);\n\t\t}\n\t\treturn user;\n\t};\n\n\taddUser = async (user, options?): Promise<any> => {\n\t\tconst newUser = await this.api.post(`/users`, user, options);\n\t\treturn newUser;\n\t};\n\n\tdeleteUser = async ({ corrlinks_id }, options?): Promise<any> => {\n\t\tawait this.api.delete(`/users/${corrlinks_id}`, options);\n\t\treturn true;\n\t};\n\n\taddUserPayment = async ({ corrlinks_id, payment }, options?): Promise<any> => {\n\t\tconst result = await this.api.post(`/users/${corrlinks_id}/payments`, payment, options);\n\t\treturn result;\n\t};\n\n\tsendMessageToUser = async ({ corrlinks_id, subject, body }, options?): Promise<any> => {\n\t\tconst result = await this.api.post(`/admin/${corrlinks_id}/message`, { subject, body }, options);\n\t\treturn result;\n\t};\n\n\tdeleteUserPayment = async ({corrlinks_id, payment_id}, options?): Promise<any> => {\n\t\tconst result = await this.api.delete(`/users/${corrlinks_id}/payments/${payment_id}`, options);\n\t\treturn result;\n\t};\n\n\tpostPurchase = async (pd: PurchaseDetails, options?): Promise<any> => {\n\t\tconst { amount, comment } = pd;\n\t\tconst result = await this.api.post(`/user/${pd.corrlinks_id}/purchase/${pd.product_instance_id}`, { amount, comment }, options);\n\t\treturn result;\n\t};\n\n\tfetchPhonebookEntries = async ({ corrlinks_id }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(`phonebook/${corrlinks_id}`, options);\n\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\tgetPhonebookEmail = async ({ corrlinks_id }, options?): Promise<string> => {\n\t\tconst response: any = await this.api.get(`phonebook-email/${corrlinks_id}?subject=phonebook`, options);\n\t\treturn response.data;\n\t};\n\n\tupdatePhonebookEntries = async ({ corrlinks_id, entries }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.put(`phonebook/${corrlinks_id}`, entries, options);\n\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\n\t\tif (response.data[\"error\"]) {\n\t\t\tthrow response.data[\"error\"];\n\t\t}\n\n\t\treturn [];\n\t};\n\n\tsendTextPhonebook = async ({ corrlinks_id, text, account, responseRequired = null }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.put(`phonebook/${corrlinks_id}/process`, { text, responseRequired, account }, options);\n\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\n\t\tif (response.data[\"text\"]) {\n\t\t\treturn response.data[\"text\"];\n\t\t}\n\n\t\tif (response.data[\"error\"]) {\n\t\t\tthrow response.data[\"error\"];\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tsendToMessageFromCorrlinks = async ({ corrlinks_id, text, account, subject = \"phonebook\" }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.post(`message-from-corrlinks`, { to: \"na\", from: `blank (${corrlinks_id})`, body: text, subject, account }, options);\n\t\tconsole.log(response);\n\t\talert(response[\"data\"][\"data\"][\"message\"] || response[\"data\"][\"data\"][\"status\"]);\n\t\treturn null;\n\t};\n\n\tfetchUserNotes = async ({ corrlinks_id }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(`users/${corrlinks_id}/notes`, options);\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\tfetchMessagesForCorrlinks = async ({ corrlinks_id }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(`users/${corrlinks_id}/messages-for-corrlinks`, options);\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\tfetchMessagesForSociety = async ({ corrlinks_id }, options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(`users/${corrlinks_id}/messages-for-society`, options);\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\tfetchProducts = async (options?): Promise<any[]> => {\n\t\tconst response = await this.api.get(`products`, options);\n\t\tif (response.data && response.data[\"data\"]) {\n\t\t\tconst data: [] = response.data[\"data\"] as [];\n\t\t\treturn [...data];\n\t\t}\n\t\treturn [];\n\t};\n\n\taddUserNote = async ({ corrlinks_id, note }, options?): Promise<any> => {\n\t\tconst newNote = await this.api.post(`users/${corrlinks_id}/notes`, { note }, options);\n\t\treturn newNote;\n\t};\n\n\tdeleteUserNote = async ({ corrlinks_id, note_id }, options?): Promise<any> => {\n    await this.api.delete(`/users/${corrlinks_id}/notes/${note_id}`, options);\n\t\treturn true;\n\t};\n}\n\nexport default new API();\n","import React, { useState, useEffect } from \"react\";\nimport { Input, Button, TextField } from \"@material-ui/core\";\nimport { useUserStore, usePhonebookStore } from \"../Store/hooks\";\nimport UserStore from \"../Store/UserStore\";\nimport { useObserver } from \"mobx-react-lite\";\nimport PhonebookStore from \"../Store/PhonebookStore\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\ninterface Props {\n\tcorrlinks_id?: string;\n}\n\nconst setValue = setFn => event => {\n\tsetFn(event.target.value);\n};\n\nexport const PhonebookTest: React.FC<Props> = props => {\n\tconst userStore: UserStore = useUserStore();\n\n\tconst [text, setText] = useState(\"\");\n\tconst [subject, setSubject] = useState(\"\");\n\tconst [account, setAccount] = useState(\"\");\n\tconst [corrlinks_id, setCorrlinks_id] = useState(\"\");\n\tconst [response, setResponse] = useState(\"null\");\n\tconst phonebookStore: PhonebookStore = usePhonebookStore();\n\n\tuseEffect(() => {\n\t\tuserStore.fetchUsers();\n\t}, [userStore]);\n\n\tconst sendText = async event => {\n\t\tconst result: any = await phonebookStore.sendTextPhonebook({ corrlinks_id, text, account, responseRequired: 'EMAIL_TEXT' });\n\t\tconsole.log(result);\n\t\tsetResponse(result);\n\t};\n\tconst sendToMessageFromCorrlinks = async subject => {\n\t\tconst result: any = await phonebookStore.sendToMessageFromCorrlinks({ corrlinks_id, text, subject, account });\n\t\tconsole.log(result);\n\t\tsetResponse(result);\n\t};\n\tconst clearResponse = () => setResponse(\"\");\n\tconst addTemplateText = () => setText(TEMPLATE);\n\tconst copyResponse = () => setText(response);\n\n\tconst getPhonebook = async event => {\n\t\tconst result: any = await phonebookStore.getPhonebookEmail({ corrlinks_id, });\n\t\tconsole.log(result);\n\t\tsetResponse(result);\n\t};\n\n\treturn useObserver(() => {\n\t\tconst users = userStore.users.slice().sort((a, b) => (a.name > b.name ? 1 : -1));\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tid=\"corrlinks_id\"\n\t\t\t\t\tonChange={(e, user) => setCorrlinks_id(user ? user.corrlinks_id : \"\")}\n\t\t\t\t\toptions={users}\n\t\t\t\t\tgetOptionLabel={o => `${o.name} ${o.corrlinks_id}`}\n\t\t\t\t\tstyle={{ width: 300 }}\n\t\t\t\t\trenderInput={params => <TextField {...params} name=\"corrlinks_id\" variant=\"standard\" fullWidth />}\n\t\t\t\t\trenderOption={o => <div data-value={o.corrlinks_id}>{`${o.name} ${o.corrlinks_id}`}</div>}\n\t\t\t\t/>\n\n\t\t\t\t<Button variant=\"outlined\" onClick={addTemplateText}>Add template text</Button>\n\t\t\t\t<Button variant=\"outlined\" disabled={!corrlinks_id} onClick={getPhonebook}>Get Phonebook email</Button>\n\t\t\t\t\n\t\t\t\t<Input style={{border:'1px solid black'}} placeholder=\"Subject\" value={subject} onChange={setValue(setSubject)} rows={20} fullWidth />\n\t\t\t\t<Input style={{border:'1px solid black'}} placeholder=\"account\" value={account} onChange={setValue(setAccount)} rows={20} fullWidth />\n\t\t\t\t<Input style={{border:'1px solid black'}} placeholder=\"email\" value={text} onChange={setValue(setText)} rows={20} fullWidth multiline />\n\n\t\t\t\t<Button variant=\"outlined\" disabled={!corrlinks_id} onClick={sendText}>Send Phonebook email to process</Button>\n\t\t\t\t<Button variant=\"outlined\" disabled={!corrlinks_id} onClick={clearResponse}>Clear Response</Button>\n\t\t\t\t<Button variant=\"outlined\" disabled={!corrlinks_id} onClick={copyResponse}>Copy Response to Text</Button>\n\t\t\t\t<Button variant=\"outlined\" disabled={!corrlinks_id} onClick={()=>sendToMessageFromCorrlinks(subject)}>Send to message-from-corrlinks</Button>\n\t\t\t\t<div style={{ whiteSpace: \"pre\" }}>{response}</div>\n\t\t\t</>\n\t\t);\n\t});\n};\n\nconst TEMPLATE = `This is your Phonebook!\n\nYou can add up to 15 entries. Add a friends and family on each line, like so:\n\n1. 01234567890 Joe mobile\n\nWhen you send back the phonebook, we’ll update our records automatically, and message you back if there are any\nproblems.\n\n--phonebook start\n1.\n2. 4242424242 shaun\n3. 1234567890 shaun again\n4. 0909090909 julia\n5.\n6.\n7.\n8.\n9.\n10.\n11.\n12.\n13.\n14.\n15.\n--phonebook end\n\nPHONEBOOK INSTRUCTIONS\nTo send an email to a contact in your phonebook, send us the email with their name only in the first line, and your\nmessage on the next lines. For example:\n\nJoe mobile\nHi Joe, this is a test message\nThanks!\nJack\n\nTo ADD a contact: enter their mobile number and name into an empty row.\nTo DELETE a contact: remove their mobile number and name`;","import React, { useState, useEffect } from \"react\";\nimport { Input, Button, TextField } from \"@material-ui/core\";\nimport { useUserStore } from \"../Store/hooks\";\nimport UserStore from \"../Store/UserStore\";\nimport { useObserver } from \"mobx-react-lite\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\ninterface Props {\n\tcorrlinksId?: string;\n}\n\nconst setValue = setFn => event => {\n\tsetFn(event.target.value);\n};\n\nexport const SendMessageToCorrlinks: React.FC<Props> = props => {\n\tconst userStore: UserStore = useUserStore();\n\tconst [body, bodySet] = useState(\"\");\n\tconst [subject, subjectSet] = useState(\"\");\n\tconst [account, accountSet] = useState(\"\");\n\tconst [corrlinksId, corrlinksIdSet] = useState(\"\");\n\n\tconst onChange = (e, user) => [corrlinksIdSet(user?.corrlinks_id || \"\"), accountSet(user?.corrlinks_account || \"\")];\n\tconst clear = () => [bodySet(\"\"), subjectSet(\"\"), accountSet(\"\"), corrlinksIdSet(\"\")];\n\tconst sendText = async () => {\n\t\tconst result = await userStore.sendMessageToUser({ corrlinksId, subject, body });\n\t\tif (result) {\n\t\t\talert(`message sent`);\n\t\t\treturn clear();\n\t\t}\n\t\talert(`message failed to send`);\n\t};\n\n  const isValid = !corrlinksId || !subject || !body;\n\n\tuseEffect(() => {\n\t\tuserStore.fetchUsers();\n\t}, [userStore]);\n\n\treturn useObserver(() => {  \n\t\tconst users = userStore.users.slice().sort((a, b) => (a.name > b.name ? 1 : -1));\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tid=\"corrlinksId\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\toptions={users}\n\t\t\t\t\tgetOptionLabel={o => `${o.name} ${o.corrlinks_id}`}\n\t\t\t\t\tstyle={{ width: 300 }}\n\t\t\t\t\trenderInput={params => <TextField {...params} name=\"corrlinksId\" variant=\"standard\" fullWidth />}\n\t\t\t\t\trenderOption={o => <div data-value={o.corrlinks_id}>{`${o.name} ${o.corrlinks_id}`}</div>}\n\t\t\t\t/>\n\n\t\t\t\t<Input style={{ border: \"1px solid black\" }} placeholder=\"Subject\" value={subject} onChange={setValue(subjectSet)} fullWidth />\n\t\t\t\t<Input style={{ border: \"1px solid black\" }} placeholder=\"from \" value={account} disabled fullWidth />\n\t\t\t\t<Input style={{ border: \"1px solid black\" }} placeholder=\"email\" value={body} onChange={setValue(bodySet)} rows={20} fullWidth multiline />\n\n\t\t\t\t<Button variant=\"outlined\" disabled={isValid} onClick={sendText}>\n\t\t\t\t\tSend Message\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"outlined\" disabled={isValid} onClick={clear}>\n\t\t\t\t\tClear\n\t\t\t\t</Button>\n\t\t\t</>\n\t\t);\n\t});\n};\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport CorrlinksUsers from \"./CorrlinksUsers\";\nimport PaymentForm from \"./PaymentForm\";\nimport Phonebook from \"./Phonebook\";\nimport { inject, observer } from \"mobx-react\";\n// import LoginForm from './LoginForm';\nimport API from \"../libs/api\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport { PhonebookTest } from \"./PhonebookTest\";\nimport { SendMessageToCorrlinks } from \"./SendMessageToCorrlinks\";\n\ninterface TabPanelProps {\n\tchildren?: React.ReactNode;\n\tindex: any;\n\tvalue: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<Typography\n\t\t\tcomponent=\"div\"\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`simple-tabpanel-${index}`}\n\t\t\taria-labelledby={`simple-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</Typography>\n\t);\n}\n\nfunction a11yProps(index: any) {\n\treturn {\n\t\tid: `simple-tab-${index}`,\n\t\t\"aria-controls\": `simple-tabpanel-${index}`\n\t};\n}\n\n@inject(\"store\")\n@observer\nclass SimpleTabs extends React.Component<{\n\tstore?;\n\tprops?;\n}> {\n\thandleChange = () => console.log;\n\trender() {\n\t\tconst value = this.props.store.location.hash;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Tabs value={value} aria-label=\"simple tabs example\">\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Corrlinks Users\"\n\t\t\t\t\t\t\tvalue=\"corrlinks-users\"\n\t\t\t\t\t\t\thref=\"#corrlinks-users\"\n\t\t\t\t\t\t\t{...a11yProps(1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Payment Entry Form\"\n\t\t\t\t\t\t\tvalue=\"payment-form\"\n\t\t\t\t\t\t\thref=\"#payment-form\"\n\t\t\t\t\t\t\t{...a11yProps(2)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Phonebooks\"\n\t\t\t\t\t\t\tvalue=\"phonebooks\"\n\t\t\t\t\t\t\thref=\"#phonebooks\"\n\t\t\t\t\t\t\t{...a11yProps(3)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"PhonebookTest\"\n\t\t\t\t\t\t\tvalue=\"phonebook-test\"\n\t\t\t\t\t\t\thref=\"#phonebook-test\"\n\t\t\t\t\t\t\t{...a11yProps(3)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Message To Corrlnks\"\n\t\t\t\t\t\t\tvalue=\"send-message-to-corrlinks\"\n\t\t\t\t\t\t\thref=\"#send-message-to-corrlinks\"\n\t\t\t\t\t\t\t{...a11yProps(3)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tabs>\n\t\t\t\t</AppBar>\n\n\t\t\t\t{window.location.host.includes(\"localhost\") && (\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={API.getEndpoint}\n\t\t\t\t\t\tonChange={a => {\n\t\t\t\t\t\t\tconst v = a.target.value as string;\n\t\t\t\t\t\t\tAPI.setEndpoint(v);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{API.getEndpoints().map(a => (\n\t\t\t\t\t\t\t<MenuItem key={a} value={a}>\n\t\t\t\t\t\t\t\t{a}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t)}\n\n\t\t\t\t{/* <TabPanel value={value} index={'login'}>\n\t\t\t\t\t<LoginForm />\n\t\t\t\t</TabPanel> */}\n\t\t\t\t<TabPanel value={value} index={\"corrlinks-users\"}>\n\t\t\t\t\t<CorrlinksUsers />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel value={value} index={\"payment-form\"}>\n\t\t\t\t\t<PaymentForm />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel value={value} index={\"phonebooks\"}>\n\t\t\t\t\t<Phonebook />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel value={value} index={\"phonebook-test\"}>\n\t\t\t\t\t<PhonebookTest />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel value={value} index={\"send-message-to-corrlinks\"}>\n\t\t\t\t\t<SendMessageToCorrlinks />\n\t\t\t\t</TabPanel>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SimpleTabs;\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport MenuTabs from \"./Views/MenuTabs\";\n\n@inject(\"store\")\n@observer\nclass App extends React.Component<{\n\tstore?;\n\tprops?;\n}> {\n\tasync componentDidMount() {\n\t\tawait this.props.store.app.fetchUsers();\n\t}\n\n\trender() {\n\t\treturn <MenuTabs />;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n\ttypography: {\n\t\tfontFamily: \"'Lato', sans-serif\",\n\t\tsubtitle1: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\",\n\t\t\ttextTransform: \"uppercase\"\n\t\t},\n\t\tsubtitle2: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\",\n\t\t\ttextTransform: \"uppercase\",\n\t\t\tcolor: \"#0e4b87\"\n\t\t},\n\n\t\th1: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\",\n\t\t\tfontSize: \"4rem\"\n\t\t},\n\n\t\th2: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\"\n\t\t},\n\n\t\th3: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\"\n\t\t},\n\n\t\th4: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\"\n\t\t},\n\t\th5: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\"\n\t\t},\n\t\th6: {\n\t\t\tfontFamily: \"Montserrat, sans-serif\",\n\t\t\tfontWeight: 500,\n\t\t\tletterSpacing: \"0.3rem\"\n\t\t}\n\t},\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: \"#fff\",\n\t\t\tmain: \"#0e4b87\",\n\t\t\t// dark: '#1B365D',\n\t\t\tcontrastText: \"#fff\"\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: \"#137dc9\",\n\t\t\tmain: \"#1B365D\",\n\t\t\tdark: \"#135dbd\",\n\t\t\t// dark: will be calculated from palette.secondary.main,\n\t\t\tcontrastText: \"#fff\"\n\t\t}\n\t}\n});\n\ntheme.overrides = {\n\tMuiTableCell: {\n\t\troot: {\n\t\t\tpadding: theme.spacing(0.3, 1, 0.3, 1),\n\t\t\t\"&:first-child\": {\n\t\t\t\tpaddingLeft: 16\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default theme;\n\nexport const ampTheme = {\n\tgoogleSignInButton: { backgroundColor: \"red\", borderColor: \"red\" },\n\tsignInButtonIcon: { display: \"none\" },\n\tsectionHeader: Object.assign(\n\t\t{},\n\t\ttheme.typography.subtitle2,\n\t\ttheme.typography.h4\n\t),\n\tsectionFooterSecondaryContent: {\n\t\t'& a:[data-test=\"sign-in-create-account-link\"]': { display: \"none\" }\n\t},\n\tbutton: {\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\tborderRadius: theme.spacing(1),\n\t\tboxShadow:\n\t\t\t\"0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\n\t},\n\ta: {\n\t\tcolor: theme.palette.secondary.light\n\t},\n\ttoast: {\n\t\ttop: \"auto\",\n\t\tbottom: 0\n\t}\n};\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { inject, observer } from \"mobx-react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nfunction TransitionUp(props) {\n\treturn <Slide {...props} direction=\"up\" />;\n}\nconst styles = {\n\tsuccess: {\n\t\tbackgroundColor: \"#1B365D\"\n\t},\n\tinfo: {\n\t\tbackgroundColor: \"lightblue\"\n\t},\n\twarning: {\n\t\tbackgroundColor: \"orange\"\n\t},\n\terror: {\n\t\tbackgroundColor: \"red\"\n\t}\n};\n\nconst variantIcon = {\n\tsuccess: CheckCircleIcon,\n\twarning: WarningIcon,\n\terror: ErrorIcon,\n\tinfo: InfoIcon\n};\n\n@inject(\"store\")\n@observer\nclass MessageSnackbar extends React.Component<{\n\tstore?;\n\tprops?;\n}> {\n\thandleClick = () => {\n\t\tthis.props.store.notifications.popFromMessageQueue();\n\t};\n\n\thandleClose = () => {\n\t\tthis.props.store.notifications.popFromMessageQueue();\n\t};\n\n\trender() {\n\t\tconst queueItem = this.props.store.notifications.getFromMessageQueue();\n\t\tif (!queueItem) return \"\";\n\t\tconst Icon = variantIcon[queueItem.type];\n\t\tconst { message, type } = queueItem;\n\t\tconst typeText =\n\t\t\ttype === \"success\"\n\t\t\t\t? \"\"\n\t\t\t\t: type.charAt(0).toUpperCase() + type.substr(1) + \": \";\n\n\t\treturn (\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"left\"\n\t\t\t\t}}\n\t\t\t\topen={true}\n\t\t\t\tonClose={this.handleClose}\n\t\t\t\tTransitionComponent={TransitionUp}\n\t\t\t\tContentProps={{ \"aria-describedby\": \"message-id\" }}\n\t\t\t>\n\t\t\t\t<SnackbarContent\n\t\t\t\t\tstyle={styles[type]}\n\t\t\t\t\tmessage={\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tid=\"client-snackbar\"\n\t\t\t\t\t\t\tstyle={{ color: \"white\", display: \"flex\", alignItems: \"center\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon style={{ opacity: 0.9, marginRight: 8 }} />\n\t\t\t\t\t\t\t{typeText}\n\t\t\t\t\t\t\t{message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t\taction={[\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\tonClick={this.handleClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CloseIcon style={{ fontSize: 20 }} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t]}\n\t\t\t\t></SnackbarContent>\n\t\t\t</Snackbar>\n\t\t);\n\t}\n}\n\nexport default MessageSnackbar;\n","import { observable, action } from \"mobx\";\nimport API from \"../libs/api\";\nimport { removeItemsByFieldValue, toYYYYMMDD } from \"../libs/common\";\nimport PaymentDetails, { PurchaseDetails } from \"./InterfacePaymentDetails\";\n\nexport default class AppStore {\n\t@observable isLoadingUsers: boolean = false;\n\t@observable users: any[] = [];\n\t@observable isPaymentsLoading: boolean = false;\n\t@observable payments: any[] = [];\n\t@observable paymentNotification: {} = null;\n\t@observable notes: any[] = [];\n\t@observable products: any[] = [];\n\t@observable messagesForCorrlinks: any[] = [];\n\t@observable messagesForSociety: any[] = [];\n\t@observable isLoading: {\n\t\tusers: boolean;\n\t\tpayments: boolean;\n\t\tnotes: boolean;\n\t\tproducts: boolean;\n    messagesForCorrlinks: boolean;\n    messagesForSociety: boolean;\n\t} = {\n\t\tusers: false,\n\t\tpayments: false,\n\t\tnotes: false,\n\t\tproducts: false,\n    messagesForCorrlinks: false,\n    messagesForSociety: false,\n\t};\n\n\t@action.bound\n\tfetchUserPayments = async corrlinksId => {\n\t\tconst fn = \"fetchUserPayments\";\n\t\ttry {\n\t\t\tthis.isPaymentsLoading = true;\n\t\t\tconst data = await API.fetchUserPayments({ corrlinksId }).catch(errors => {\n\t\t\t\tconsole.log(fn, \"there are some API errors\", errors);\n\t\t\t});\n\t\t\tdata && (this.payments = [...removeItemsByFieldValue(this.payments, \"corrlinks_id\", corrlinksId), ...data]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.isPaymentsLoading = false;\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tsetLoading = async (type, value) => {\n\t\tthis.isLoading = Object.assign({}, this.isLoading, { [type]: value });\n\t};\n\n\t@action.bound\n\tfetchUsers = async () => {\n\t\tconst fn = \"fetchUsers\";\n\t\ttry {\n\t\t\tthis.setLoading(\"users\", true);\n\n\t\t\tconst users = await API.fetchUsers().catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(\"users\", false);\n\t\t\tusers && (this.users = [...users]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(\"users\", false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tupdateUser = async ({ corrlinks_id, user }) => {\n\t\tconst fn = \"updateUser\";\n\t\ttry {\n\t\t\tthis.isLoadingUsers = true;\n\t\t\tawait API.updateUser({ corrlinks_id, user });\n\t\t\tthis.users = [...this.users.filter(a => a.corrlinks_id !== user.corrlinks_id), user];\n\t\t\tthis.isLoadingUsers = false;\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.isLoadingUsers = false;\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\taddUser = async ({ user }) => {\n\t\tconst fn = \"addUser\";\n\t\ttry {\n\t\t\tthis.isLoadingUsers = true;\n\t\t\tconst response = await API.addUser(user);\n\t\t\tif (response.data.data) {\n\t\t\t\tthis.users = [...this.users, response.data.data];\n\t\t\t}\n\t\t\tthis.isLoadingUsers = false;\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.isLoadingUsers = false;\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\tdeleteUser = async ({ corrlinks_id }) => {\n\t\tconst fn = \"deleteUser\";\n\t\ttry {\n\t\t\tthis.isLoadingUsers = true;\n\t\t\tawait API.deleteUser({ corrlinks_id });\n\t\t\tthis.users = this.users.filter(a => a.corrlinks_id !== corrlinks_id);\n\t\t\tthis.isLoadingUsers = false;\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.isLoadingUsers = false;\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\tsubmitPayment = async (paymentDetails: PaymentDetails) => {\n\t\tconst fn = \"submitPayment\";\n\n\t\ttry {\n\t\t\tconst user = { corrlinks_id: paymentDetails.corrlinks_id };\n\t\t\tconst payment = Object.assign({}, paymentDetails);\n\t\t\tdelete payment.corrlinks_id;\n\t\t\tpayment.date_created = toYYYYMMDD(payment.date_created);\n\t\t\tpayment.date_subscription_ends = payment.date_subscription_ends ? toYYYYMMDD(payment.date_subscription_ends) : null;\n\n\t\t\tthis.isLoadingUsers = true;\n\t\t\tawait API.addUserPayment({ corrlinks_id: user.corrlinks_id, payment });\n\t\t\tthis.isLoadingUsers = false;\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.isLoadingUsers = false;\n\t\t\treturn false;\n\t\t}\n\t\tthis.paymentNotification = { message: \"done\", type: \"success\" };\n\t\treturn true;\n\t};\n\n\t@action.bound\n\tsubmitPurchase = async (purchaseDetails: PurchaseDetails) => {\n\t\tconst fn = \"submitPurchase\";\n\n\t\ttry {\n\t\t\tthis.isLoadingUsers = true;\n\t\t\tawait API.postPurchase(purchaseDetails);\n\t\t\tthis.isLoadingUsers = false;\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.isLoadingUsers = false;\n\t\t\treturn false;\n\t\t}\n\t\tthis.paymentNotification = { message: \"done\", type: \"success\" };\n\t\treturn true;\n\t};\n\n\t@action.bound\n\tdeletePayment = async ({ corrlinks_id, payment_id }) => {\n\t\tconst fn = \"deletePayment\";\n\t\tconst stateVariable = \"payments\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\t\t\tconst results = await API.deleteUserPayment({ corrlinks_id, payment_id });\n      if (results.status === 200) {\n        this.payments = this.payments.filter(a => !(a.corrlinks_id === corrlinks_id && a.id === payment_id));\n      }\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\tfetchUserNotes = async ({ corrlinks_id }) => {\n\t\tconst fn = \"fetchUserNotes\";\n\t\tconst stateVariable = \"notes\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\n\t\t\tconst notes = await API.fetchUserNotes({ corrlinks_id }).catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t\tnotes && (this.notes = [...notes]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(stateVariable, false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tfetchMessagesForCorrlinks = async ({ corrlinks_id }) => {\n\t\tconst fn = \"fetchMessagesForCorrlinks\";\n\t\tconst stateVariable = \"messagesForCorrlinks\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\n\t\t\tconst messages = await API.fetchMessagesForCorrlinks({ corrlinks_id }).catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t\tmessages && (this.messagesForCorrlinks = [...messages]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(stateVariable, false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tfetchMessagesForSociety = async ({ corrlinks_id }) => {\n\t\tconst fn = \"fetchMessagesForSociety\";\n\t\tconst stateVariable = \"messagesForSociety\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\n\t\t\tconst messages = await API.fetchMessagesForSociety({ corrlinks_id }).catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t\tmessages && (this.messagesForSociety = [...messages]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(stateVariable, false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tfetchProducts = async () => {\n\t\tconst fn = \"fetchProducts\";\n\t\tconst stateVariable = \"products\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\n\t\t\tconst data = await API.fetchProducts().catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t\tdata && (this.products = [...data]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(stateVariable, false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\taddUserNote = async ({ corrlinks_id, note }) => {\n\t\tconst fn = \"addUserNote\";\n\t\tconst stateVariable = \"notes\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\t\t\tconst response = await API.addUserNote({ corrlinks_id, note });\n\t\t\tif (response.data.data) {\n\t\t\t\tthis.notes = [...this.notes, response.data.data];\n\t\t\t}\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\tdeleteUserNote = async ({ corrlinks_id, note_id }) => {\n\t\tconst fn = \"deleteUserNote\";\n\t\tconst stateVariable = \"notes\";\n\t\ttry {\n\t\t\tthis.setLoading(stateVariable, true);\n\t\t\tawait API.deleteUserNote({ corrlinks_id, note_id });\n\t\t\tthis.notes = this.notes.filter(a => !(a.corrlinks_id === corrlinks_id && a.id === note_id));\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(stateVariable, false);\n\t\t}\n\t\treturn [];\n\t};\n}\n","import { observable, action } from \"mobx\";\n\nclass LocationStore {\n\t@observable hash: string = \"\";\n\t@observable q: string = \"\";\n\n\tconstructor() {\n\t\twindow.addEventListener(\"hashchange\", this.locationHashChanged, false);\n\t\tthis.locationHashChanged({ newURL: window.location.href });\n\t}\n\n\t@action.bound\n\tlocationHashChanged = e => {\n\t\tlet _hash = e.newURL.split(\"#\")[1] || \"\";\n\t\tlet [hash, q] = _hash.split(\"?\");\n\t\tthis.hash = hash;\n\t\tthis.q = q;\n\t};\n}\n\nexport default LocationStore;\n","import { observable, action } from \"mobx\";\n\nclass NotificationStore {\n\t@observable messageQueue = [];\n\n\t@action.bound\n\taddToMessageQueue = message => {\n\t\tthis.messageQueue.push(message);\n\t};\n\n\t@action.bound\n\tpopFromMessageQueue = () => {\n\t\tthis.messageQueue.pop();\n\t};\n\n\tgetFromMessageQueue = () => {\n\t\tif (!this.messageQueue.length) return null;\n\t\treturn this.messageQueue[0];\n\t};\n}\n\nexport default NotificationStore;\n","export interface IUser {\n\tcorrlinks_id: string;\n\tname: string;\n\tstatus: string;\n\tlocation: string;\n\tphonebook_entries_allowed: number;\n\tdate_created: string;\n\tdate_released: string;\n\tdate_subscription_ends: string;\n\tadhoc_phonebook_edit_window_date_end: string;\n\tadhoc_phonebook_edit_window_date_start: string;\n\tcredits: number;\n}\n\nexport class User implements IUser {\n\tcorrlinks_id: string;\n\tname: string;\n\tstatus: string;\n\tlocation: string;\n\tphonebook_entries_allowed: number;\n\tdate_created: string;\n\tdate_released: string;\n\tdate_subscription_ends: string;\n\tadhoc_phonebook_edit_window_date_end: string;\n\tadhoc_phonebook_edit_window_date_start: string;\n\tdate_news_subscription_ends: string;\n\tdate_horoscope_subscription_ends: string;\n\tdate_sports_subscription_ends: string;\n\tdate_investments_subscription_ends: string;\n\tcredits: number;\n\n\tconstructor(user: IUser){\n\t\tObject.assign(this, user);\n\t}\n\n\tstatic createFromArray(users: Array<IUser>){\n\t\treturn users.map(user=>new User(user));\n\t}\n}\n","import { observable, action } from \"mobx\";\nimport { User } from \"./User\";\nimport API from \"../libs/api\";\n\nexport default class UserStore {\n\t@observable users: User[] = [];\n\t@observable isLoading: boolean = false;\n\n\tconstructor() {\n\t\tthis.fetchUsers();\n\t}\n\n\t@action.bound\n\tsetLoading = async value => {\n\t\tthis.isLoading = value;\n\t};\n\n\t@action.bound\n\tfetchUsers = async () => {\n\t\tconst fn = \"fetchUsers\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\n\t\t\tconst users: void | Array<any> = await API.fetchUsers().catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(false);\n\t\t\tusers && (this.users = [...User.createFromArray(users)]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tupdateUser = async ({ corrlinks_id, user }) => {\n\t\tconst fn = \"updateUser\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tawait API.updateUser({ corrlinks_id, user });\n\t\t\tthis.users = [...this.users.filter(a => a.corrlinks_id !== user.corrlinks_id), user];\n\t\t\tthis.setLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(false);\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\taddUser = async ({ user }) => {\n\t\tconst fn = \"addUser\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tconst response = await API.addUser(user);\n\t\t\tif (response.data.data) {\n\t\t\t\tthis.users = [...this.users, response.data.data];\n\t\t\t}\n\t\t\tthis.setLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(false);\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\tdeleteUser = async ({ corrlinks_id }) => {\n\t\tconst fn = \"deleteUser\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tawait API.deleteUser({ corrlinks_id });\n\t\t\tthis.users = this.users.filter(a => a.corrlinks_id !== corrlinks_id);\n\t\t\tthis.setLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(false);\n\t\t}\n\t\treturn [];\n\t};\n\n\t@action.bound\n\tsendMessageToUser = async ({ corrlinksId, subject, body }) => {\n\t\tconst fn = \"sendMessageToUser\";\n\t\tlet result: boolean = false;\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tconst response = await API.sendMessageToUser({ corrlinks_id: corrlinksId, subject, body });\n\t\t\tif (response?.status === 200) result = true;\n\t\t\tthis.setLoading(false);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t\tthis.setLoading(false);\n\t\t}\n\t\treturn result;\n\t};\n}\n","import { observable, action, toJS } from \"mobx\";\nimport API from \"../libs/api\";\nimport { PhonebookEntry } from \"./PhonebookEntry\";\n\nfunction stripTableData(a: any) {\n\treturn a.map(({ tableData, ...fields }) => ({ ...fields }));\n}\n\nexport default class PhonebookStore {\n\t@observable entries: PhonebookEntry[] = [];\n\t@observable isLoading: boolean = false;\n\n\t@action.bound\n\tsetLoading = async value => {\n\t\tthis.isLoading = value;\n\t};\n\n\t@action.bound\n\tfetchPhonebookEntries = async corrlinks_id => {\n\t\tconst fn = \"fetchPhonebookEntries\";\n\t\tif (!corrlinks_id) this.entries = [];\n\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\n\t\t\tconst entries: void | Array<any> = await API.fetchPhonebookEntries({ corrlinks_id }).catch(errors => {\n\t\t\t\tconsole.log(\"there are some API errors\", errors);\n\t\t\t});\n\t\t\tthis.setLoading(false);\n\t\t\tentries && (this.entries = [...PhonebookEntry.createFromArray(entries)]);\n\t\t} catch (e) {\n\t\t\tconsole.log(fn, e);\n\t\t}\n\t\tthis.setLoading(false);\n\t\treturn null;\n\t};\n\n\t@action.bound\n\tupdatePhonebookEntry = async ({ corrlinks_id, entry }) => {\n\t\tconst fn = \"updatePhonebookEntry\";\n\t\tlet result = true;\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tconst entries = stripTableData(toJS(this.entries).map(a => (a.line_id === entry.line_id ? entry : a)));\n\t\t\tawait API.updatePhonebookEntries({ corrlinks_id, entries });\n\t\t\tthis.entries = [...entries];\n\t\t} catch (e) {\n\t\t\tresult = false;\n\t\t\tconst errorMsg = fn + \":\" + e.map(line => `\\n  line ${line.line_id}:\\n    ${line.errors.join(\"\\n    \")}`);\n\t\t\talert(errorMsg);\n\t\t}\n\t\tthis.setLoading(false);\n\t\treturn result;\n\t};\n\n\t@action.bound\n\tsendTextPhonebook = async ({ corrlinks_id, text, account, responseRequired = null }) => {\n\t\tconst fn = \"sendTextPhonebook\";\n\t\tlet result = \"\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tconst result = await API.sendTextPhonebook({ corrlinks_id, text, responseRequired, account });\n\t\t\tthis.setLoading(false);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tresult = fn + \":\" + e.map(line => `\\n  line ${line.line_id}:\\n    ${line.errors.join(\"\\n    \")}`);\n\t\t}\n\t\tthis.setLoading(false);\n\t\treturn result;\n\t};\n\n\t@action.bound\n\tsendToMessageFromCorrlinks = async ({ corrlinks_id, text, subject, account }) => {\n\t\tconst fn = \"sendToMessageFromCorrlinks\";\n\t\tlet result = \"\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tconst result = await API.sendToMessageFromCorrlinks({ corrlinks_id, text, subject, account });\n\t\t\tthis.setLoading(false);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tresult = fn + \":\" + e.map(line => `\\n  line ${line.line_id}:\\n    ${line.errors.join(\"\\n    \")}`);\n\t\t}\n\t\tthis.setLoading(false);\n\t\treturn result;\n\t};\n\n\t@action.bound\n\tgetPhonebookEmail = async ({ corrlinks_id }) => {\n\t\tconst fn = \"getPhonebookEmail\";\n\t\tlet result = \"\";\n\t\ttry {\n\t\t\tthis.setLoading(true);\n\t\t\tconst result = await API.getPhonebookEmail({ corrlinks_id });\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tresult = fn + \":\" + e.map(line => `\\n  line ${line.line_id}:\\n    ${line.errors.join(\"\\n    \")}`);\n\t\t}\n\t\tthis.setLoading(false);\n\t\treturn result;\n\t};\n\n\t// @action.bound\n\t// addUser = async ({ user }) => {\n\t// \tconst fn = \"addUser\";\n\t// \ttry {\n\t// \t\tthis.setLoading(true);\n\t// \t\tconst response = await API.addUser(user);\n\t// \t\tif (response.data.data) {\n\t// \t\t\tthis.users = [...this.users, response.data.data];\n\t// \t\t}\n\t// \t\tthis.setLoading(false);\n\t// \t} catch (e) {\n\t// \t\tconsole.log(fn, e);\n\t// \t\tthis.setLoading(false);\n\t// \t}\n\t// \treturn [];\n\t// };\n\n\t// @action.bound\n\t// deleteUser = async ({ line_id }) => {\n\t// \tconst fn = \"deleteUser\";\n\t// \ttry {\n\t// \t\tthis.setLoading(true);\n\t// \t\tawait API.deleteUser({ corrlinks_id });\n\t// \t\tthis.users = this.users.filter(a => a.corrlinks_id !== corrlinks_id);\n\t// \t\tthis.setLoading(false);\n\t// \t} catch (e) {\n\t// \t\tconsole.log(fn, e);\n\t// \t\tthis.setLoading(false);\n\t// \t}\n\t// \treturn [];\n\t// };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"mobx-react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./libs/theme\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MessageSnackbar from \"./Views/MessageSnackbar\";\n\nimport AppStore from \"./Store/AppStore\";\nimport LocationStore from \"./Store/LocationStore\";\nimport NotificationStore from \"./Store/NotificationStore\";\nimport UserStore from \"./Store/UserStore\";\nimport PhonebookStore from \"./Store/PhonebookStore\";\n\nexport const store = {\n\tapp: new AppStore(),\n\tlocation: new LocationStore(),\n\tnotifications: new NotificationStore(),\n\tuser: new UserStore(),\n\tphonebook: new PhonebookStore(),\n};\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t<App />\n\t\t\t\t<MessageSnackbar />\n\t\t\t</MuiPickersUtilsProvider>\n\t\t</ThemeProvider>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}